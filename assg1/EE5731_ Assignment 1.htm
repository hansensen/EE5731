<!DOCTYPE html>
<!-- saved from url=(0068)http://tanrobby.github.io/teaching/ece_visual/assignment1/index.html -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
    <meta name="description" content="">
    <meta name="author" content="">
    <!-- <link rel="icon" href="../../favicon.ico"> -->

    <title>EE5731: Assignment 1</title>

    <!-- Bootstrap core CSS -->
    <link href="./EE5731_ Assignment 1_files/bootstrap.css" rel="stylesheet">

    <!-- Custom styles for this template -->
    <link href="./EE5731_ Assignment 1_files/jumbotron.css" rel="stylesheet">
  </head>

  <body>
    <div class="container" style="font-size:16px">
      <center>
	<h3> Assignment 1: Panoramic Image Stitching</h3>
	<h4>Deadline: October 1, 2019 at 5pm</h4>
      </center>
      <br>
      <br>
      <b>Read carefully</b>: Academic integrity must be stricly followed. Copying-and-pasting from other's
      code or froms any sources is not allowed. Software will be used
      to detect any form of source code plagiarism. You must write a
      report in a pdf format as instructed below (and indicate the parts and numbers
      clearly). Your submitted code must be grouped/separated 
      into the same parts in the instructions. In your submission, you
      must provide us with all necessary libraries. You are not
      allowed to use any Matlab toolboxes. The maximum score for
      completing part 1 until part 6 is 75. More scores are given
      for submission on part 7. The deadline is a strict deadline (no
      possible extension), so please prepare and plan early and carefully.
      <br>
      <br>
      <hr>
      <center>
	See the frequently asked question page if you have any doubt
	on the instructions: <a href="http://tanrobby.github.io/teaching/ece_visual/assignment1/faqs.html" target="_blank">FAQs</a>
      </center>
      <hr>
      <br>
      <h4><b>Part 1: 2D Convolution</b></h4>
      <ol>
      <li>
	Write a program for the image 2D
	convolution. It should be able to process any input image, and
	operate using the following kernels:
	<ul>
	<li>Sobel kernel,
	</li><li>Gaussian kernel, 
	</li><li>The 5 Haar-like masks (note, for this part, the user should be able to set the scale of the masks)
	</li></ul>

      </li><li> Provide your conclusions on the outputs of each of the kernels, and
      how the size of the kernel influences the outputs.
      </li></ol>
      <br>
      <h4><b>Part 2: SIFT Features and Descriptors</b></h4>
      <ol>
	<li> Download the images from
	here: <a href="https://www.dropbox.com/s/cnyst3qnjkck5mr/assg1.zip?dl=0" target="_blank">link</a>
	</li><li> Extract  SIFT keypoints from im01.jpg using any publicly
	available SIFT code.
	</li><li> In your report, show the keypoints on the images, like
	shown below (similar but not necessarily the same):
	  <br>
	  <img src="./EE5731_ Assignment 1_files/01.jpg" alt="input" width="504" height="328"> 
	  <br>	  
      </li></ol>
      
	  
      <h4><b>Part 3: Homography</b></h4>
	<b> For this part, you must write your own code for computing
	the homography matrix and transforming an image.</b>
      <ol>
	<li>
	Download <a href="https://www.dropbox.com/s/xcnv21v5ww1vefj/h1.jpg?dl=0" target="_blank">h1.jpg</a>
	and <a href="https://www.dropbox.com/s/2twxi19rv9fsg29/h2.jpg?dl=0" target="_blank">h2.jpg</a>
	</li><li> Provide a GUI where the user can click 4 points on an
	  image
	  </li><li> Let the user to choose 4 points on h1.jpg and 4 points
	  on h2.jpg
	  <br>
	  <img src="./EE5731_ Assignment 1_files/08.jpg" alt="input" height="300">
	  <img src="./EE5731_ Assignment 1_files/09.jpg" alt="input" height="300"> 	  
	  <br>
	</li><li> Compute the homography matrix from h1.jpg to h2.jpg, and show
	  the homography matrix in your report.
	</li><li> Use the homography matrix to tranform h1.jpg to h2.jpg, and show
	the result in your report:
	  <br>
	  <img src="./EE5731_ Assignment 1_files/10.jpg" alt="input" height="300"> 
	  <br>
	</li><li> Compute the homography matrix from h2.jpg to h1.jpg, and show
	  the homography matrix in your report.
	</li><li> Use the second homography matrix to tranform h2.jpg to h1.jpg, and show
	the result in your report:
	  <br>
	  <img src="./EE5731_ Assignment 1_files/11.jpg" alt="input" height="300"> 
	  <br>
	
      </li></ol>
      <br>
	  
      <h4><b>Part 4: Manual Homography + Sticthing</b></h4>
      <ol>
	<li> Load im01.jpg and im02.jpg
	</li><li> Let the user to choose 4 points on im01.jpg and 4 points
	  on im02.jpg
	  <br>
	  <img src="./EE5731_ Assignment 1_files/12.jpg" alt="input" height="300">
	  <img src="./EE5731_ Assignment 1_files/13.jpg" alt="input" height="300"> 	  
	  <br>
	</li><li> Compute the homograhy matrix
	</li><li> Stitch the images together using the computed homography
	  matrix and show the result in your report:
	  <br>
	  <img src="./EE5731_ Assignment 1_files/14.jpg" alt="input" height="300"> 	  
	  <br>
	</li><li> Explain in your report, why there is an effect of double
	edges in the overlapping regions between im01.jpg and im02.jpg
      </li></ol>
      <br>

      <h4><b>Part 5: Homography + RANSAC</b></h4>
      <ol>
	<li> Load im01.jpg and im02.jpg
	</li><li> Based on SIFT, find matches between the two images
	</li><li> In your report, show all the matches:
	  <br>
	  <img src="./EE5731_ Assignment 1_files/15.jpg" alt="input" height="250"> 	  
	  <br>
	</li><li> Compute the best homography matrix using RANSAC
	</li><li> In your reprt, show all the inlier matches (matches that
	support your best homography matrix):
	  <br>
	  <img src="./EE5731_ Assignment 1_files/16.jpg" alt="input" height="250"> 	  
	  <br>
	  
	</li><li> Stitch the images together using the best homography
	  matrix and show the result in your report:
	  <br>
	  <img src="./EE5731_ Assignment 1_files/17.jpg" alt="input" height="300">
	  <img src="./EE5731_ Assignment 1_files/18.jpg" alt="input" height="300"> 	  
	  <br>
      </li></ol>
      <br>
      <h4><b>Part 6: Basic Panoramic Image</b></h4>
      For this part and the next part, you can use any set of images
      (even images taken by yourself) 
      that support your implementation. You must include the
      images in your submission.
      <ol>
	<li> Using SIFT and RANSAC for computing the homography
	matrices, create a program to generate panoramic images given
	  ordered images
	</li><li> In your report, using as many provided images as you can,
	  show the output of your panoramic image.  
	</li><li> The figure below is generated from 3 images and is
	  just an example. You must use as many images as you can.
	  <br>
	  <img src="./EE5731_ Assignment 1_files/19.jpg" alt="input" height="300">
	  <br>
      </li></ol>
      <br>
      <h4><b>Part 7: Advanced Panoramic Image</b></h4>
      You will receive more scores if you include the following
	  implementation in your submission (the score depends on the
      complexity of the problems and your solutions). To be graded, you must
      provide some explanation about your implementation and results
      in your report. 
      <ol>
	<li> Handling unordered images
	</li><li> Showing the error accumulation problem and implementing the
	  bundle adjustment for solving the problem
	</li><li> Warping, straigthening, gain compensation and multiband blending
	</li><li> Other problems that are beyond the basic panoramic image in
	Part 6.
      </li></ol>
      Note, for the first three problems,
      see <a href="http://matthewalunbrown.com/papers/ijcv2007.pdf" target="_blank">paper 1 (Automatic Panoramic Image Stitching using Invariant Features)</a> and for the
      paralax problem
      see <a href="http://web.cecs.pdx.edu/~fliu/papers/cvpr2014-stitching.pdf" target="_blank">paper 2 (Parallax-tolerant Image Stitching)</a>.
      <br>
      <br>      
	  <h4><b>Submission:</b></h4>
      <p>
	Submit your <b>codes and report</b> via LumiNUS. Again, your
	codes must be grouped/separated based on the parts above. The
	report must be in a pdf format.

      </p>

      <br>	  <br>

      <br>
      
</div>      
    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="./EE5731_ Assignment 1_files/jquery.min.js"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
    <script src="./EE5731_ Assignment 1_files/bootstrap.min.js"></script>
  
  <script type="text/javascript">
    var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
    document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script><script src="./EE5731_ Assignment 1_files/ga.js" type="text/javascript"></script>
<script type="text/javascript">
  try {
  var pageTracker = _gat._getTracker("UA-13131132-3");
  pageTracker._trackPageview();
  } catch(err) {}</script>

</body></html>